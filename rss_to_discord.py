import feedparser
import requests
import os
from bs4 import BeautifulSoup

# RSS-–ª–µ–Ω—Ç–∞ TGStat –∫–∞–Ω–∞–ª–∞
RSS_URL = "https://tgstat.ru/rss/en/channel/@iBakhmetNews"

# Webhook URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è GitHub (—Å–µ–∫—Ä–µ—Ç)
DISCORD_WEBHOOK_URL = os.getenv("DISCORD_WEBHOOK_URL")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ TGStat (–Ω—É–∂–µ–Ω user-agent)
HEADERS = {
    "User-Agent": "Mozilla/5.0"
}

def get_post_content(url):
    """–ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ —Å TGStat"""
    try:
        r = requests.get(url, headers=HEADERS)
        soup = BeautifulSoup(r.text, "html.parser")
        msg_div = soup.find("div", class_="tgme_widget_message_text")
        if not msg_div:
            return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞"
        return msg_div.get_text(strip=True)
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞: {e}"

def main():
    # –ß–∏—Ç–∞–µ–º RSS-–ª–µ–Ω—Ç—É
    feed = feedparser.parse(RSS_URL)

    # –°–ø–∏—Å–æ–∫ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    try:
        with open("sent_links.txt", "r") as f:
            sent_links = set(f.read().splitlines())
    except FileNotFoundError:
        sent_links = set()

    new_links = []

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –∏–ª–∏ –Ω–µ—Ç
    first_run = not os.path.exists("sent_links.txt")

    # –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ ‚Äî –±–µ—Ä—ë–º 3 —Å—Ç–∞—Ä—ã—Ö –ø–æ—Å—Ç–∞, –∏–Ω–∞—á–µ ‚Äî 5 —Å–≤–µ–∂–∏—Ö
    entries_to_process = reversed(feed.entries[-3:]) if first_run else feed.entries[:5]

    for entry in entries_to_process:
        if entry.link not in sent_links:
            text = get_post_content(entry.link)
            message = f"**{entry.title}**\n{text}\nüîó {entry.link}"
            requests.post(DISCORD_WEBHOOK_URL, json={"content": message})
            new_links.append(entry.link)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    with open("sent_links.txt", "a") as f:
        for link in new_links:
            f.write(link + "\n")

if __name__ == "__main__":
    main()
